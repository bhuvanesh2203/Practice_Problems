package backtracking;

import java.util.ArrayList;
import java.util.List;

public class Realbacktracking {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		boolean b[][] = {{true,true,true},
				{true,true,true},
				{true,true,true}};
		List<String> l1=new ArrayList<>();
		backpaths(b, "", 0, 0, l1);
	}
	
	static void backpaths(boolean b[][],String pro,int r,int c,List<String> l1) {
		if(r==b.length-1 && c==b[0].length-1) {
			l1.add(pro);
			return;
		}
		b[r][c]=false;
		if(!b[r][c]) {
			return;
		}
		
		if(r<b.length-1 && r>=0) {
			backpaths(b, pro+'D', r+1, c, l1);
		}
		if(c<b[0].length-1 && c>=0) {
			backpaths(b, pro+'R', r, c+1, l1);
		}
		if(c<b[0].length-1 && c>=0  && r<b.length-1 && r>=0) {
			backpaths(b, pro+'L', r, c-1 ,l1);
		}
		if(c<b[0].length-1 && c>=0  && r<b.length-1 && r>=0) {
			backpaths(b, pro+'U', r-1, c ,l1);
		}
		
		b[r][c]=true;
		
	}

}
